# ===============================================
# Components declarations
# ===============================================
snippet comp "react component ES6" b
import React, { Component, PropTypes } from 'react';

class $1 extends Component {
	constructor(props) {
		super(props);$2
	}

	render() {
		return (
			${3:<div>Hello World</div>}
		);
	}
}

$1.propTypes = {};
$1.defaultProps = {};
$1.contextTypes = {};

export default $1;
endsnippet

snippet fcomp "stateless, function component" b
import React, { PropTypes } from 'react';

function ${1:Component}(props) {
	return (
		${2:<div>Hello</div>}
	);
}

$1.propTypes = {};
$1.defaultProps = {};
$1.contextTypes = {};

export default $1;
endsnippet

# ===============================================
# Prop types and default props, context
# ===============================================
snippet propt "prop types definition" w
propTypes = {
	${1:prop}: ${2:value}
};
endsnippet

snippet dpropt "default prop values" w
defaultProps = {
	${1:prop}: ${2:value}
};
endsnippet

snippet contt "context types definition" w
contextTypes = {
	${1:prop}: ${2:value}
};
endsnippet

snippet prop "one prop type definition" w
PropTypes.${1:object}${2:.isRequired}
endsnippet

snippet gcc "get child context" w
getChildContext() {
	return ({
		${1:name}: ${2:value}
	});
}
endsnippet

# ===============================================
# Component lifecycle functions
# ===============================================
snippet cwm "Component will mount method" b
componentWillMount() {
	$1
}
endsnippet

snippet cwu "Component will unmount method" b
componentWillUnmount() {
	$1
}
endsnippet

snippet cdm "Component did mount method" b
componentDidMount() {
	$1
}
endsnippet

snippet cwrp "Component will receive props" b
componentWillReceiveProps(newProps) {
	$1
}
endsnippet

snippet scu "Should Component update" b
shouldComponentUpdate(newProps, newState) {
	$1
}
endsnippet

# ===============================================
# Misc
# ===============================================
snippet tp "this.props." w
this.props.${1:property}
endsnippet

snippet ts "this.state." w
this.state.${1:property}
endsnippet

snippet tss "this.setState" w
this.setState({
	${1:property}: ${2:value}$0
});
endsnippet

snippet prevd "prevent default on event" w
preventDefault();
endsnippet
