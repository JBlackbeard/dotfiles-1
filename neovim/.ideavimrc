
" ######################################################################################################################
" ### Author : Spiros Kabasakalis <Kabasakalis@gmail.com>                                                            ###
" ######################################################################################################################
" ### Vim Configuration for Intellij IDEA                                                                            ###
" ### Intellij IDEAr since : Fri Oct 13 2017                                                                         ###
" ######################################################################################################################


let $NVIM_TUI_ENABLE_CURSOR_SHAPE = 0
let $NVIM_TUI_ENABLE_TRUE_COLOR = 1


set nocompatible                  " choose no compatibility with legacy vi
set hidden
set runtimepath+=~/
" set tabstop=2
" set shiftwidth=2
set expandtab
set smartindent
set autoindent
set linebreak                     " And when Vim does wrap lines, have it break the lines on spaces and punctuation only (http://vim.wikia.com/wiki/Word_wrap_without_line_breaks)
set colorcolumn=+1
set number
set numberwidth=2
set scrolloff=5                   " Screen scrolls 5 lines in front of the cursor
set sidescrolloff=3
set backspace=2                   " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set history=1000
set ruler                         " show the cursor position all the time
set showcmd                       " display incomplete commands
set laststatus=2                  " Always display the status line
set autowrite                     " Automatically :write before running commands
"set cursorline                   " Highlight current line
set clipboard+=unnamed            " Allow to use system clipboard
set showmatch                     " Show matching brackets when text indicator is over them
set matchtime=2                   " How many tenths of a second to blink when matching brackets
set nostartofline                 " Prevent cursor from moving to beginning of line when switching buffers
set virtualedit=block             " To be able to select past EOL in visual block mode
set updatetime=1000               " Update time used to create swap file or other things
set nojoinspaces                  " No extra space when joining a line which ends with . ? !
set mouse-=a                      " disable mouse support, what am I a vimposer?
set complete+=kspell              " Autocomplete with dictionary words when spell check is on
set diffopt+=vertical             " Always use vertical diffs
set wildmenu                      " turn on the wildmenu cuz everyone says to
set autoread                      " have vim re-load files when they're changed outside of vim
set formatoptions+=j              " Delete comment charalter when joining commented lines
set sc                            " show commands as you type them
set lazyredraw                    " make vim a little speedier
set ttyfast

"}}}


" ---------------------------------------------------------------------------------------------------------------------
" Search settings {{{
" ---------------------------------------------------------------------------------------------------------------------
set ignorecase                    " Ignore case by default
set smartcase                     " Make search case sensitive only if it contains uppercase letters
set wrapscan                      " Search again from top when reached the bottom
set hlsearch
" set nohlsearch                    " Don't highlight after search
set incsearch                     " incremental searching
"}}}

" ---------------------------------------------------------------------------------------------------------------------
" Timeout settings {{{
" ---------------------------------------------------------------------------------------------------------------------
" Time out on key codes but not mappings. Basically this makes terminal Vim work sanely. (by Steve Losh)
set notimeout
set ttimeout
set ttimeoutlen=10
"}}}

" ---------------------------------------------------------------------------------------------------------------------
" Native Plugins {{{
" ======================================================================================================================
set surround

"}}}

" ---------------------------------------------------------------------------------------------------------------------
" Core key bindings-Remappings {{{
" ======================================================================================================================

" Save file
" Ctrl+S, IDE mapping.

" let mapleader = "," " leader
" let mapleader=" " " Leader

" Quicker window movement
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" Tab navigation
nnoremap ,l gt
nnoremap ,h gT


" H to beginning of line, L to the end
noremap H ^
noremap L $

" D deletes to the end of the line, and Y yanks to end of line
nnoremap D d$
nnoremap Y y$

" After block yank and paste, move cursor to the end of operated text and don't override register
vnoremap y y`]
vnoremap p "_dP`]
nnoremap p p`]

" Yank and paste from clipboard
nnoremap ,y "+y
vnoremap ,y "+y
nnoremap ,yy "+yy
nnoremap ,p "+p

" have x (removes single character) not go into the default registry
nnoremap x "_x
" Make X an operator that removes without placing text in the default registry
nmap X "_d
nmap XX "_dd
vmap X "_d
vmap x "_d

" Don't yank to default register when changing something
nnoremap c "xc
xnoremap c "xc

" Reselect last-pasted text
nnoremap gp `[v`]

" Have the indent commands re-highlight the last visual selection to make
" multiple indentations easier
vnoremap > >gv
vnoremap < <gv


" Enter gives a new line when in command mode without entering insert mode. Likewise, shift+enter gives a new line
" above the cursor
nmap <CR> o<Esc>
nnoremap <S-Enter> O<Esc>


" Make the dot command work as expected in visual mode (via
" https://www.reddit.com/r/vim/comments/3y2mgt/do_you_have_any_minor_customizationsmappings_that/cya0x04)
vnoremap . :norm.<CR>

" Center screen when jumping to next match
nnoremap n nzz
nnoremap N Nzz
vnoremap n nzz
vnoremap N Nzz

" Center screen when moving up and down
nnoremap <C-u> <C-u>zz
nnoremap <C-d> <C-o>zz
vnoremap <C-u> <C-u>zz
vnoremap <C-d> <C-o>zz

"" Turn off recording
map q <Nop>

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
"}}}


" ---------------------------------------------------------------------------------------------------------------------
" IDEA Actions {{{
" ======================================================================================================================

"Find / Replace
map / :action Find<CR>

" Preserve  ideavim search
map g/ /

"Replace
map ,/ :action Replace<CR>


" Reformat Code
map ,f :action ReformatCode<CR>

" Insert Live Template
map ,ilt :action InsertLiveTemplate<CR>


" Rename Element
map ,re :action RenameElement<CR>

" Navigation
" Back Forward
map gf :action Forward<CR>
map gb :action Back<CR>
map ,gt :action GotoTest<CR>

map ,se :action SearchEverywhere<CR>



map ,, :action VimFilePrevious<CR>
map ,q :action CloseContent<CR>
map ,fs :action FileStructurePopup<CR>
map ,sy :action GotoSymbol<CR>
map ,ga :action GotoAction<CR>
map ,b :action ToggleLineBreakpoint<CR>



" code navigation
map gi :action GotoImplementation<CR>
map gs :action GotoSuperMethod<CR>
map fu :action FindUsages<CR>
map ,hu :action HighlightUsagesInFile<CR>
map mu :action MethodUp<CR>
map md :action MethodDown<CR>

" Run / Debug
map ,rc :action ChooseRunConfiguration<CR>
map ,r :action Run<CR>
map ,dc :action ChooseDebugConfiguration<CR>
map ,d :action Debug<CR>
map ,rcl :action RunClass<CR>
map ,dcl :action DebugClass<CR>
"}}}

"===============================
""Windows Action
"=================================
map ,l :action NextTab<CR>
map ,h :action PreviousTab<CR>
map ,xt :action ReopenClosedTab<CR>

map ,cs :action CheckStyleCurrentFileAction<CR>

map ,q :action CloseContent<cr>
map ,ww <C-W>w " Toggle Window
map ,wd <C-W>c " Close Window
map ,wh SplitHorizontally
map ,wv SplitVertically
map ,wh :action HideAllWindows<CR>
map ,cle :action CloseEditor<CR>

"Code Navigation
"================================
map ,a :action GotoAction<cr>
map ,jd :action QuickJavaDoc<CR>
map <C-s> :action SurroundWith<cr>
map gc :action GotoClass<CR>

" BreakPoint
map ,vb :action ViewBreakpoints<CR>




" ---------------------------------
" AceJump
" ---------------------------------
" Press `f` to activate AceJump
map ff :action AceAction<CR>
" Press `F` to activate Target Mode
map ft :action AceTargetAction<CR>
" Press `g` to activate Line Mode
map fl :action AceLineAction<CR>








