
" ######################################################################################################################
" ### Author : Spiros Kabasakalis <Kabasakalis@gmail.com>                                                            ###
" ######################################################################################################################
" ### Vim Configuration for Intellij IDEA                                                                            ###
" ### Intellij IDEAr since : Fri Oct 13 2017                                                                         ###
" ######################################################################################################################


let $NVIM_TUI_ENABLE_CURSOR_SHAPE = 0
let $NVIM_TUI_ENABLE_TRUE_COLOR = 1


set nocompatible                  " choose no compatibility with legacy vi
set hidden
set runtimepath+=~/
" set tabstop=2
" set shiftwidth=2
set expandtab
set smartindent
set autoindent
set linebreak                     " And when Vim does wrap lines, have it break the lines on spaces and punctuation only (http://vim.wikia.com/wiki/Word_wrap_without_line_breaks)
set colorcolumn=+1
set number
set numberwidth=2
set scrolloff=5                   " Screen scrolls 5 lines in front of the cursor
set sidescrolloff=3
set backspace=2                   " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set history=1000
set ruler                         " show the cursor position all the time
set showcmd                       " display incomplete commands
set laststatus=2                  " Always display the status line
set autowrite                     " Automatically :write before running commands
"set cursorline                   " Highlight current line
set clipboard+=unnamed            " Allow to use system clipboard
set showmatch                     " Show matching brackets when text indicator is over them
set matchtime=2                   " How many tenths of a second to blink when matching brackets
set nostartofline                 " Prevent cursor from moving to beginning of line when switching buffers
set virtualedit=block             " To be able to select past EOL in visual block mode
set updatetime=1000               " Update time used to create swap file or other things
set nojoinspaces                  " No extra space when joining a line which ends with . ? !
set mouse-=a                      " disable mouse support, what am I a vimposer?
set complete+=kspell              " Autocomplete with dictionary words when spell check is on
set diffopt+=vertical             " Always use vertical diffs
set wildmenu                      " turn on the wildmenu cuz everyone says to
set autoread                      " have vim re-load files when they're changed outside of vim
set formatoptions+=j              " Delete comment charalter when joining commented lines
set sc                            " show commands as you type them
set lazyredraw                    " make vim a little speedier
set ttyfast

"}}}


" ---------------------------------------------------------------------------------------------------------------------
" Search settings {{{
" ---------------------------------------------------------------------------------------------------------------------
set ignorecase                    " Ignore case by default
set smartcase                     " Make search case sensitive only if it contains uppercase letters
set wrapscan                      " Search again from top when reached the bottom
" set hlsearch
set nohlsearch                    " Don't highlight after search
set incsearch                     " incremental searching
"}}}

" ---------------------------------------------------------------------------------------------------------------------
" Timeout settings {{{
" ---------------------------------------------------------------------------------------------------------------------
" Time out on key codes but not mappings. Basically this makes terminal Vim work sanely. (by Steve Losh)
set notimeout
set ttimeout
set ttimeoutlen=10
"}}}

" ---------------------------------------------------------------------------------------------------------------------
" Native Plugins {{{
" ======================================================================================================================
set surround " doesn't work though.

"}}}

" ---------------------------------------------------------------------------------------------------------------------
" Core key bindings-Remappings {{{
" ======================================================================================================================

" Save file
" Ctrl+S, IDE mapping.

" let mapleader = "," " leader
" let mapleader=" " " Leader

"
" Quicker window movement
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" Tab navigation
" nnoremap ,l gt
" nnoremap ,h gT


" H to beginning of line, L to the end
noremap H ^
noremap L $

" D deletes to the end of the line, and Y yanks to end of line
nnoremap D d$
nnoremap Y y$

" After block yank and paste, move cursor to the end of operated text and don't override register
vnoremap y y`]
vnoremap p "_dP`]
nnoremap p p`]

" Yank and paste from clipboard
nnoremap ,y "+y
vnoremap ,y "+y
nnoremap ,yy "+yy
nnoremap ,p "+p

" have x (removes single character) not go into the default registry
nnoremap x "_x
" Make X an operator that removes without placing text in the default registry
nmap X "_d
nmap XX "_dd
vmap X "_d
vmap x "_d

" Don't yank to default register when changing something
nnoremap c "xc
xnoremap c "xc

" Change line
nmap cc 1S

" Reselect last-pasted text
nnoremap gp `[v`]

" Move visual block
" Delegated to IDE

" Have the indent commands re-highlight the last visual selection to make
" multiple indentations easier
vnoremap > >gv
vnoremap < <gv


" Enter gives a new line when in command mode without entering insert mode. Likewise, shift+enter gives a new line
" above the cursor
nmap <CR> o<Esc>
nnoremap <S-Enter> O<Esc>


" Make the dot command work as expected in visual mode (via
" https://www.reddit.com/r/vim/comments/3y2mgt/do_you_have_any_minor_customizationsmappings_that/cya0x04)
vnoremap . :norm.<CR>

" Center screen when jumping to next match
nnoremap n nzz
nnoremap N Nzz
vnoremap n nzz
vnoremap N Nzz


" Center screen when moving up and down
nnoremap <C-u> <C-u>zz
nnoremap <C-o> <C-d>zz
vnoremap <C-u> <C-u>zz
vnoremap <C-o> <C-d>zz

"" Turn off recording
map q <Nop>

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
"}}}


" ---------------------------------------------------------------------------------------------------------------------
" IDEA Actions {{{
" =====================================================================================================================

" Generic IDE
map <A-a>    :action GotoAction<CR>
map <Space>f :action Forward<CR>
map <Space>b :action Back<CR>
map <Space>tt :action ShowSettings<CR>
"
"
" " File Operations
map <Space>s :action SaveAll<CR>
" Find
map / :action Find<CR>
" Preserve  ideavim search
map g/ /
map ,/ :action Replace<CR>
map <Space>n :action NextOccurence<CR>
map <Space>p :action PreviousOccurence<CR>
map <Space>cc :action CloseContent<CR>
map <Space><Space> :action VimFilePrevious<CR>
map <Space>l :action NextTab<CR>
map <Space>h :action PreviousTab<CR>
map <Space>ot :action ReopenClosedTab<CR>
map <Space>a :action $SelectAll<CR>
map  ,sfp :action ShowFilePath<CR>
map <Space>ncl :action NewClass<CR>
" map <Space>nfo :action NewDir<CR>
" map <Space>nfi :action NewFile<CR>
map <Space>np  :action NewProject<CR>
map <Space>nsb :action NewScratchBuffer<CR>
map <Space>nw :action OpenElementInNewWindow<CR>
map <Space>ca :action CloseAllEditors<CR>
map <Space>co :action CloseAllEditorsButActive<CR>
map <Space>kk :action EditorAddOrRemoveCaret<CR>
map <Space>ku :action EditorCloneCaretAbove<CR>
map <Space>kd :action EditorCloneCaretBelow<CR>
map <Space>fw :action FindWordAtCaret<CR>
map <Space>tc :action EditorToggleCase<CR>
map <Space>mo :action MoveEditorToOppositeTabGroup<CR>

" " Code navigation

map gc :action GotoClass<CR>
map gf :action GotoFile<CR>
map gs :action GotoSymbol<CR>
map gi :action GotoImplementation<CR>
map gd :action GotoDeclaration<CR>
map gsm :action GotoSuperMethod<CR>
map fu :action FindUsages<CR>
" map fuf :action FindUsagesInFile<CR>
" map ,huu :action HighlightUsages<CR>
map ,huf :action HighlightUsagesInFile<CR>
map mu :action MethodUp<CR>
map md :action MethodDown<CR>
map ,qd :action QuickJavaDoc<CR>
map ,tb :action ToggleBookmark<CR>
map ,tbm :action ToggleBookmarkWithMnemonic<CR>
map ,0 :action ToggleBookmark0<CR>
map ,1 :action ToggleBookmark1<CR>
map ,2 :action ToggleBookmark2<CR>
map ,3 :action ToggleBookmark3<CR>
map ,4 :action ToggleBookmark4<CR>
map ,5 :action ToggleBookmark5<CR>
map ,6 :action ToggleBookmark6<CR>
map ,7 :action ToggleBookmark7<CR>
map ,8 :action ToggleBookmark8<CR>
map ,9 :action ToggleBookmark9<CR>
map ,sb :action ShowBookmarks<CR>
map ,gt :action GotoTest<CR>

" Code

map ,ff :action ReformatCode<CR>
map ,ac :action RearrangeCode<CR>
map ,fd :action ShowReformatFileDialog<CR>
map ,re :action RenameElement<CR>
map ,lt :action InsertLiveTemplate<CR>
map ,fs :action FileStructurePopup<CR>
map ,gg :action Generate<CR>
map ,sw :action SurroundWith<CR>
map ,sl :action SurroundWithLiveTemplate<CR>
map ,oi :action OptimizeImports<CR>
map ,tm :action GenerateTestMethod <CR>


"  Refactor

map ,rq :action Refactorings.QuickListPopupAction<CR>
map ,re :action RenameElement<CR>
map ,rf :action RenameFile<CR>
map ,ce :action CopyElement<CR>
map ,rm :action Move<CR>
map ,cs :action ChangeSignature<CR>

" Run / Debug

map ,rr :action Run<CR>
map ,cr :action ChooseRunConfiguration<CR>
map ,dd :action Debug<CR>
map ,cd :action ChooseDebugConfiguration<CR>
map ,rcl :action RunClass<CR>
map ,dcl :action DebugClass<CR>
map ,b :action ToggleLineBreakpoint<CR>
map ,vb :action ViewBreakpoints<CR>
map ,cc :action Compile<CR>
map ,cp :action CompileProject<CR>

" View

map tdm :action ToggleDistractionFreeMode<CR>
map tfs :action ToggleFullScreen<CR>
map tpm :action TogglePresentationMode<CR>
map ,rcf :action RecentChangedFiles<CR>
map ,qcs :action QuickChangeScheme<CR>
map ,si :action SelectIn<CR>

"  Windows Actions

map <Space>wh :action SplitHorizontally<CR>
map <Space>wv :action SplitVertically<CR>
map <Space>q  :action HideAllWindows<CR>
map <Space>whs :action HideSideWindows<CR>
map <Space>wha  :action HideActiveWindow<CR>
map <Space>wl :action JumpToLastWindow<CR>
map <Space>x :action VimWindowClose<CR>
" map  mm :action MaximizeToolWindow<CR>
map <Space>pc :action CloseProject<CR>

map <Space>wst :action ActivateStructureToolWindow<CR>
map <Space>was :action ActivateApplicationServersToolWindow<CR>
map <Space>wbv :action ActivateBeanValidationToolWindow<CR>
map <Space>wdi :action ActivateCDIToolWindow<CR>
map <Space>wcs :action ActivateCheckStyleToolWindow<CR>
map <Space>wdb :action ActivateDatabaseToolWindow<CR>
map <Space>wbg :action ActivateDebugToolWindow<CR>
map <Space>wel :action ActivateEventLogToolWindow<CR>
map <Space>wil :action ActivateImageLayersToolWindow<CR>
map <Space>wje :action ActivateJavaEnterpriseToolWindow<CR>
map <Space>wsf :action ActivateJSFToolWindow<CR>
map <Space>wmv :action ActivateMavenProjectsToolWindow<CR>
map <Space>wtt :action ActivateTerminalToolWindow<CR>
map <Space>git :action ActivateVersionControlToolWindow<CR>
map <Space>www :action MaximizeToolWindow<CR>


" Git

map ,gad :action Git.Add<CR>
map ,gcl :action Git.Clone<CR>
map ,gcr :action Git.Configure.Remotes<CR>
map ,gnb :action Git.CreateNewBranch<CR>
map ,gnt :action Git.CreateNewTag<CR>
map ,gfe :action Git.Fetch<CR>
map ,gin :action Git.Init<CR>
map ,glo :action Git.Log<CR>
map ,gme :action Git.Merge<CR>
map ,gpl :action Git.Pull<CR>
map ,grb :action Git.Rebase<CR>
map ,gre :action Git.Reset<CR>
map ,grc :action Git.ResolveConflicts<CR>
map ,gst :action Git.Stash<CR>
map ,gta :action Git.Tag<CR>
map ,guc :action Git.Uncommit<CR>
map ,gus :action Git.UnStash<CR>

"  Github

map ,ghcg :action Github.Create.Gist<CR>
map ,ghpr :action Github.Create.Pull.Request<CR>
map ,ghbr :action Github.Open.In.Browser<CR>


" AceJump

" Press `f` to activate AceJump
map ff :action AceAction<CR>
" Press `F` to activate Target Mode
map ft :action AceTargetAction<CR>
" Press `g` to activate Line Mode
map fl :action AceLineAction<CR>


"  TabShift

map ,h :action TabShiftActions.StretchLeft<CR>
map ,l :action TabShiftActions.StretchRight<CR>
map ,j :action TabShiftActions.StretchDown<CR>
map ,k :action TabShiftActions.StretchUp<CR>

map ,mh :action TabShiftActions.MoveFocusLeft<CR>
map ,ml :action TabShiftActions.MoveFocusRight<CR>
map ,mj :action TabShiftActions.MoveFocusDown<CR>
map ,mk :action TabShiftActions.MoveFocusUp<CR>

map ,sh :action TabShiftActions.ShiftLeft<CR>
map ,sl :action TabShiftActions.ShiftRight<CR>
map ,sj :action TabShiftActions.ShiftDown<CR>
map ,sk :action TabShiftActions.ShiftUp<CR>


"}}}
